openapi: 3.0.3
info:
  title: Redaktionen API
  description: |
    AI-powered news aggregation and analysis system that performs PESTEL (Political, Economic, Social, Technological, Environmental, Legal) analysis on RSS feeds.

    Developed by Innovationsarenan @ Göteborgsregionen.
  version: 1.0.0
  contact:
    name: Innovationsarenan @ Göteborgsregionen

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://redaktionen.innovationsarenan.dev/api
    description: Production server

tags:
  - name: Workflows
    description: Workflow orchestration for PESTEL analysis
  - name: Signals
    description: Raw news signals from RSS feeds
  - name: Summaries
    description: AI-generated summaries with poster images
  - name: Webhooks
    description: Webhook endpoints for external integrations

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication via Authorization header

  schemas:
    Factor:
      type: string
      enum:
        - political
        - economic
        - social
        - technological
        - environmental
        - legal
      description: PESTEL factor category

    Signal:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        title:
          type: string
          description: News item title
          example: "New Environmental Policy Announced"
        summary:
          type: string
          description: Brief summary of the news item
          example: "Government announces stricter carbon emission standards for 2025."
        source:
          type: string
          description: Name of the news source
          example: "BBC News"
        sourceUrl:
          type: string
          format: uri
          description: URL to the original news article
          example: "https://example.com/article"
        date:
          type: string
          format: date-time
          description: Publication date in ISO 8601 format
          example: "2025-01-15T10:30:00Z"
        factor:
          $ref: "#/components/schemas/Factor"
      required:
        - title
        - summary
        - source
        - sourceUrl
        - date
        - factor

    Summary:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        title:
          type: string
          description: Swedish article title generated by AI
          example: "Ny miljöpolitik kan förändra industrin"
        body:
          type: string
          description: Full Swedish article body generated by AI
          example: "Regeringen har nyligen tillkännagivit en ny miljöpolitik..."
        posterUrl:
          type: string
          format: uri
          nullable: true
          description: URL to the generated poster image
          example: "https://storage.supabase.co/images/poster-123.jpg"
        signalId:
          type: integer
          description: Reference to the source signal
          example: 42
        sourceUrl:
          type: string
          format: uri
          description: URL to the original article
          example: "https://example.com/article"
        factor:
          type: string
          description: PESTEL factor
          example: "environmental"
        date:
          type: string
          format: date-time
          description: Publication date
          example: "2025-01-15T10:30:00Z"
        scope:
          type: string
          description: Geographic or thematic scope of the article
          example: "Sweden"
      required:
        - title
        - body
        - signalId
        - sourceUrl
        - factor
        - date
        - scope

    SignalsResponse:
      type: object
      properties:
        signals:
          type: array
          items:
            $ref: "#/components/schemas/Signal"

    SummariesResponse:
      type: array
      items:
        $ref: "#/components/schemas/Summary"

    WorkflowResponse:
      type: object
      properties:
        message:
          type: string
          example: "Workflow started."

    HealthResponse:
      type: object
      properties:
        message:
          type: string
          example: "Hello from Redaktionen API!"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: "This is a clear error message"

    WebhookResponse:
      type: object
      properties:
        message:
          type: string
          example: "Webhook triggered."

paths:
  /:
    get:
      tags:
        - Health
      summary: Health check
      description: Returns a simple health check message to verify the API is running
      operationId: healthCheck
      responses:
        "200":
          description: API is running
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"

  /workflows:
    post:
      tags:
        - Workflows
      summary: Start PESTEL workflow
      description: |
        Triggers the PESTEL workflow which:
        1. Runs all tipster agents to fetch RSS feeds for each PESTEL factor
        2. Empties existing signals and summaries
        3. Triggers the correspondent workflow to process signals
      operationId: createWorkflow
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of RSS items to process per source
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
            example: 5
      responses:
        "200":
          description: Workflow started successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /signals:
    get:
      tags:
        - Signals
      summary: List signals
      description: Retrieves all news signals from the database, optionally filtered by PESTEL factor
      operationId: listSignals
      parameters:
        - name: factor
          in: query
          description: Filter signals by PESTEL factor
          required: false
          schema:
            $ref: "#/components/schemas/Factor"
          example: environmental
      responses:
        "200":
          description: List of signals retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignalsResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /summaries:
    get:
      tags:
        - Summaries
      summary: List summaries
      description: Retrieves all AI-generated summaries with poster images from the database
      operationId: listSummaries
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of summaries retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SummariesResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /summaries/{summary}:
    get:
      tags:
        - Summaries
      summary: Get summary by ID
      description: Retrieves a single summary by its ID
      operationId: getSummary
      security:
        - BearerAuth: []
      parameters:
        - name: summary
          in: path
          description: Summary ID
          required: true
          schema:
            type: integer
            example: 42
      responses:
        "200":
          description: Summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Summary"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Summary not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /webhooks/{id}:
    post:
      tags:
        - Webhooks
      summary: Handle webhook
      description: Receives and processes webhook events from external services
      operationId: handleWebhook
      parameters:
        - name: id
          in: path
          description: Webhook identifier
          required: true
          schema:
            type: string
            example: "abc123"
      requestBody:
        description: Webhook payload (accepts any JSON)
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
